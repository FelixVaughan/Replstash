{
  "name": "replstash",
  "displayName": "Replstash",
  "description": "Save, edit and rerun repl expressions captured from the debug console",
  "publisher": "Replstash",
  "license": "MIT",
  "markdown": "github",
  "qna": "marketplace",
  "pricing": "Free",
  "homepage": "https://github.com/FelixVaughan/Replstash/blob/main/README.md",
  "bugs": {
    "url": "https://github.com/FelixVaughan/Replstash/issues"
  },
  "icon": "icon.png",
  "extensionKind": [
    "ui",
    "workspace"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/FelixVaughan/Replstash"
  },
  "author": {
    "name": "Felix Ezama-Vaughan",
    "email": "felix.ezamavaughan@gmail.com"
  },
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.92.2"
  },
  "categories": ["Debuggers"],
  "keywords": [
    "repl", 
    "debug", 
    "console", 
    "breakpoint", 
    "script", 
    "automate"
  ],
  "activationEvents": [
    "onDebug"
  ],

  "main": "./dist/extension.js",
  "contributes": {
    "viewsContainers": {
      "panel": [
        {
          "id": "evaluationResultsContainer",
          "title": "Stash Runs",
          "icon": "resources/icon.svg"
        }
      ]
    },
    "views": {
      "debug": [
        {
          "id": "breakpointsView",
          "name": "REPLSTASH",
          "type": "tree"
        }
      ],
      "evaluationResultsContainer": [
        {
          "id": "replResultsView",
          "name": "Stash Runs",
          "type": "tree"
        }
      ]
    },
    "commands": [
      {
        "command": "replstash.startCapture",
        "title": "Start Capturing Debug Console",
        "category": "Replstash"
      },
      {
        "command": "replstash.pauseCapture",
        "title": "Pause Capturing Debug Console",
        "category": "Replstash"
      },
      {
        "command": "replstash.stopCapture",
        "title": "Stop Debug Capture",
        "category": "Replstash"
      },
      {
        "command": "replstash.outputCapture",
        "title": "Output Capture Content",
        "category": "Replstash"
      },
      {
        "command": "replstash.clearCapture",
        "title": "Clear Debug Captured",
        "category": "Replstash"
      },
      {
        "command": "replstash.discardCapture",
        "title": "Discard Debug Captured",
        "category": "Replstash"
      },
      {
        "command": "replstash.clearLastExp",
        "title": "Pop Last Expression",
        "category": "Replstash"
      },
      {
        "command": "replstash.editSavedScript",
        "title": "Open Replstash Script",
        "category": "Replstash"
      },
      {
        "command": "replstash.deleteSavedScript",
        "title": "Delete Capture Script",
        "category": "Replstash"
      },
      {
        "command": "replstash.purgeScripts",
        "title": "Purge all Scripts",
        "category": "Replstash"
      },
      {
        "command": "replstash.purgeBreakpoints",
        "title": "Purge all Breakpoints",
        "category": "Replstash"
      },
      {
        "command": "replstash.enableScriptsRunnable",
        "title": "Enable Auto-run Replstash scripts",
        "category": "Replstash"
      },
      {
        "command": "replstash.disableScriptsRunnable",
        "title": "Disable Auto-run Replstash scripts",
        "category": "Replstash"
      },
      {
        "command": "replstash.deleteBreakpoint",
        "title": "Delete Replstash Breakpoint",
        "category": "Replstash"
      },
      {
        "command": "replstash.renameSavedScript",
        "title": "Rename Replstash Script",
        "category": "Replstash"
      },
      {
        "command": "replstash.activateSelected",
        "title": "Activate",
        "enablement": "view == breakpointsView"
      },
      {
        "command": "replstash.deactivateSelected",
        "title": "Deactivate",
        "enablement": "view == breakpointsView"
      },
      {
        "command": "replstash.toggleElementActive",
        "title": "Toggle",
        "enablement": "view == breakpointsView && !replstash.multipleSelectedItems"
      },
      {
        "command": "replstash.runScripts",
        "title": "Run",
        "enablement": "view == breakpointsView"
      },
      {
        "command": "replstash.copyScripts",
        "title": "Copy Scripts",
        "enablement": "view == breakpointsView && replstash.multipleSelectedItems && !replstash.breakpointSelected"
      },
      {
        "command": "replstash.pasteScripts",
        "title": "Paste Scripts",
        "enablement": "view == breakpointsView && replstash.hasCopiedScripts"
      },
      {
        "command": "replstash.removeBreakpointScripts",
        "title": "Delete",
        "enablement": "view == breakpointsView"
      },
      {
        "command": "replstash.openScripts",
        "title": "Open",
        "enablement": "view == breakpointsView && !replstash.breakpointSelected"
      },
      {
        "command": "replstash.runAllBreakpointScripts",
        "title": "Run All",
        "enablement": "view == breakpointsView && !replstash.multipleSelectedItems"
      },
      {
        "command": "replstash.treeRenameSavedScript",
        "title": "Rename",
        "enablement": "view == breakpointsView && !replstash.multipleSelectedItems"
      },
      {
        "command": "replstash.toggleBreakpointTreeViewMode",
        "title": "Toggle View Mode",
        "icon": "$(list-tree)"
      },
      {
        "command": "replstash.toggleReplTreeViewMode",
        "title": "Toggle View Mode",
        "icon": "$(list-tree)"
      },
      {
        "command": "replstash.copyErrorStack",
        "title": "Copy Stack Trace",
        "enablement": "view == replResultsView && replstash.stackAvailable"
      },
      {
        "command": "replstash.openRanScripts",
        "title": "Open Script",
        "enablement": "view == replResultsView"
      },
      {
        "command": "replstash.jumpToBreakpoint",
        "title": "Jump to Breakpoint",
        "enablement": "view == replResultsView"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "replstash.toggleBreakpointTreeViewMode",
          "when": "view == breakpointsView",
          "group": "navigation"
        },
        {
          "command": "replstash.toggleReplTreeViewMode",
          "when": "view == replResultsView",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "replstash.toggleElementActive",
          "when": "view == breakpointsView"
        },
        {
          "command": "replstash.runScripts",
          "when": "view == breakpointsView && viewItem == script"
        },
        {
          "command": "replstash.activateSelected",
          "when": "view == breakpointsView"
        },
        {
          "command": "replstash.deactivateSelected",
          "when": "view == breakpointsView"
        },
        {
          "command": "replstash.copyScripts",
          "when": "view == breakpointsView"
        },
        {
          "command": "replstash.pasteScripts",
          "when": "view == breakpointsView && viewItem == breakpoint"
        },
        {
          "command": "replstash.removeBreakpointScripts",
          "when": "view == breakpointsView"
        },
        {
          "command": "replstash.openScripts",
          "when": "view == breakpointsView"
        },
        {
          "command": "replstash.runAllBreakpointScripts",
          "when": "view == breakpointsView && viewItem == breakpoint"
        },
        {
          "command": "replstash.treeRenameSavedScript",
          "when": "view == breakpointsView && viewItem == script"
        },
        {
          "command": "replstash.copyErrorStack",
          "when": "view == replResultsView && viewItem == result"
        },
        {
          "command": "replstash.openRanScripts",
          "when": "view == replResultsView && (viewItem == script || viewItem == result)"
        },
        {
          "command": "replstash.jumpToBreakpoint",
          "when": "view == replResultsView"
        }
      ]
    },
    "keybindings": [
      {
        "command": "replstash.discardCapture",
        "key": "ctrl+shift+j h",
        "mac": "cmd+shift+j h"
      },
      {
        "command": "replstash.toggleCapture",
        "key": "ctrl+shift+j j",
        "mac": "cmd+shift+j j"
      },
      {
        "command": "replstash.pauseCapture",
        "key": "ctrl+shift+j k",
        "mac": "cmd+shift+j k"
      },
      {
        "command": "replstash.clearLastExp",
        "key": "ctrl+shift+j l",
        "mac": "cmd+shift+j l"
      },
      {
        "command": "replstash.clearCapture",
        "key": "ctrl+shift+j n",
        "mac": "cmd+shift+j n"
      },
      {
        "command": "replstash.toggleAutoRun",
        "key": "ctrl+shift+j m",
        "mac": "cmd+shift+j m"
      },
      {
        "command": "replstash.outputCapture",
        "key": "ctrl+shift+j o",
        "mac": "cmd+shift+j o"
      }
    ]
  },
  "scripts": {
    "watch": "tsc --watch",
    "doc": "npx typedoc"
  },
  "devDependencies": {
    "@types/node": "20.x",
    "@types/vscode": "^1.92.0",
    "typedoc": "^0.26.11",
    "typescript": "^5.7.2"
  }
}
