{
  "name": "save-debug",
  "displayName": "save-debug",
  "description": "",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.92.2"
  },
  "categories": [
    "Debuggers"
  ],
  "activationEvents": [
    "onDebug"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "views": {
      "debug": [
        {
          "id": "breakpointsView",
          "name": "Slugs",
          "type": "tree",
          "visibility": "visible"
        }
      ]
    },
    "commands": [
      {
        "command": "slugger.startCapture",
        "title": "Start Capturing Debug Console",
        "category": "Slugger"
      },
      {
        "command": "slugger.pauseCapture",
        "title": "Pause Capturing Debug Console",
        "category": "Slugger"
      },
      {
        "command": "slugger.stopCapture",
        "title": "Stop Debug Capture",
        "category": "Slugger"
      },
      {
        "command": "slugger.clearCapture",
        "category": "Slugger",
        "title": "Clear Debug Captured"
      },
      {
        "command": "slugger.discardCapture",
        "category": "Slugger",
        "title": "Discard Debug Captured"
      },
      {
        "command": "slugger.clearLastExp",
        "category": "Slugger",
        "title": "Pop Last Expression"
      },
      {
        "command": "slugger.editSavedScript",
        "title": "Open Script",
        "category": "Slugger"
      },
      {
        "command": "slugger.deleteSavedScript",
        "title": "Delete Capture Script",
        "category": "Slugger"
      },
      {
        "command": "slugger.activateScript",
        "title": "Activate Script",
        "category": "Slugger"
      },
      {
        "command": "slugger.purgeBreakpoints",
        "title": "Purge Breakpoints",
        "category": "Slugger"
      },
      {
        "command": "slugger.enableScriptsRunnable",
        "title": "Set Scripts Runnable",
        "category": "Slugger"
      },
      {
        "command": "slugger.disableScriptsRunnable",
        "title": "Set Scripts Not Runnable",
        "category": "Slugger"
      },
      {
        "command": "slugger.assignScriptsToBreakpoint",
        "title": "Assign Scripts to Breakpoint",
        "category": "Slugger"
      },
      {
        "command": "slugger.deleteBreakpoint",
        "title": "Delete Slug Breakpoint",
        "category": "Slugger"
      },
      {
        "command": "slugger.activateSelected",
        "title": "Activate",
        "enablement": "view == breakpointsView"
      },
      {
        "command": "slugger.deactivateSelected",
        "title": "Deactivate",
        "enablement": "view == breakpointsView"
      },
      {
        "command": "slugger.toggleElementActive",
        "title": "Toggle",
        "enablement": "view == breakpointsView && !slugger.multipleSelectedItems"
      },
      {
        "command": "slugger.runScripts",
        "title": "Run",
        "enablement": "view == breakpointsView"
      },
      {
        "command": "slugger.copyScripts",
        "title": "Copy Scripts",
        "enablement": "view == breakpointsView && slugger.multipleSelectedItems && !slugger.breakpointSelected"
      },
      {
        "command": "slugger.pasteScripts",
        "title": "Paste Scripts",
        "enablement": "view == breakpointsView && slugger.hasCopiedScripts"
      },
      {
        "command": "slugger.removeBreakpointScripts",
        "title": "Delete",
        "enablement": "view == breakpointsView"
      },
      {
        "command": "slugger.openScripts",
        "title": "Open",
        "enablement": "view == breakpointsView && !slugger.breakpointSelected"
      },
      {
        "command": "slugger.runAllBreakpointScripts",
        "title": "Run All",
        "enablement": "view == breakpointsView && !slugger.multipleSelectedItems"
      }
      
    ],
    "menus": {
      "view/item/context": [
        {
          "command": "slugger.toggleElementActive",
          "when": "view == breakpointsView && viewItem == breakpoint",
          "group": "navigation"
        },
        {
          "command": "slugger.toggleElementActive",
          "when": "view == breakpointsView && viewItem == script",
          "group": "navigation"
        },
        {
          "command": "slugger.runScripts",
          "when": "view == breakpointsView && viewItem == script",
          "group": "navigation"
        },
        {
          "command": "slugger.activateSelected",
          "when": "view == breakpointsView",
          "group": "navigation"
        },
        {
          "command": "slugger.deactivateSelected",
          "when": "view == breakpointsView",
          "group": "navigation"
        },
        {
          "command": "slugger.copyScripts",
          "when": "view == breakpointsView",
          "group": "navigation"
        },
        {
          "command": "slugger.pasteScripts",
          "when": "view == breakpointsView && viewItem == breakpoint",
          "group": "navigation"
        },
        {
          "command": "slugger.removeBreakpointScripts",
          "when": "view == breakpointsView",
          "group": "navigation"
        },
        {
          "command": "slugger.openScripts",
          "when": "view == breakpointsView",
          "group": "navigation"
        },
        {
          "command": "slugger.runAllBreakpointScripts",
          "when": "view == breakpointsView && viewItem == breakpoint",
          "group": "navigation"
        }
      ],
      "commandPalette": [
        {
          "command": "slugger.enableScriptsRunnable",
          "when": "!slugger.scriptsRunnable"
        },
        {
          "command": "slugger.disableScriptsRunnable",
          "when": "slugger.scriptsRunnable"
        }
      ]
    },
    "keybindings": [
      {
        "command": "slugger.startCapture",
        "key": "ctrl+alt+s",
        "when": "debugging"
      },
      {
        "command": "slugger.pauseCapture",
        "key": "ctrl+alt+p",
        "when": "debugging"
      },
      {
        "command": "slugger.stopCapture",
        "key": "ctrl+alt+s",
        "when": "debugging"
      },
      {
        "command": "slugger.clearCapture",
        "key": "ctrl+alt+c",
        "when": "debugging"
      },
      {
        "command": "slugger.discardCapture",
        "category": "ctrl+alt+d",
        "title": "Discard Debug Captured"
      },
      {
        "command": "slugger.clearLastExp",
        "key": "ctrl+alt+c",
        "when": "debugging"
      },
      {
        "command": "slugger.editSavedScript",
        "key": "ctrl+alt+e",
        "when": "debugging"
      },
      {
        "command": "slugger.activateScripts",
        "key": "ctrl+alt+a",
        "when": "debugging"
      },
      {
        "command": "slugger.deleteSavedScript",
        "key": "ctrl+alt+d",
        "when": "debugging"
      }
    ]
  },
  "scripts": {
    "lint": "eslint .",
    "pretest": "npm run lint",
    "test": "vscode-test",
    "watch": "tsc --watch"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.7",
    "@types/node": "20.x",
    "@types/vscode": "^1.92.0",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.4.0",
    "eslint": "^8.57.0",
    "typescript": "^5.4.5"
  }
}